{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Config",
    "type": "object",
    "additionalProperties": false,
    "properties": {
        "$schema": {
            "type": "string"
        },
        "host": {
            "description": "Server host.\n\nDefault:  `0.0.0.0`",
            "type": "string",
            "title": "host"
        },
        "port": {
            "description": "Server port.\n\nDefault:  `env.PORT` or 3000",
            "type": "number",
            "title": "port"
        },
        "environment": {
            "description": "Project environment.\n\nDefault:  `production`",
            "enum": ["development", "production"],
            "type": "string",
            "title": "environment"
        },
        "logging": {
            "description": "Logging configuration.\n\nDefault:  `console`",
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "transports": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                    "type": {
                                        "description": "Log to console",
                                        "type": "string",
                                        "enum": ["console"],
                                        "title": "type"
                                    }
                                },
                                "required": ["type"]
                            },
                            {
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                    "type": {
                                        "description": "Enable [loggly](https://www.loggly.com/) logging",
                                        "type": "string",
                                        "enum": ["loggly"],
                                        "title": "type"
                                    },
                                    "subdomain": {
                                        "description": "Loggly subdomain",
                                        "type": "string",
                                        "title": "subdomain"
                                    },
                                    "token": {
                                        "description": "Loggly token",
                                        "type": "string",
                                        "title": "token"
                                    },
                                    "tags": {
                                        "description": "Loggly tags, can be used to filter logs",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "title": "tags"
                                    }
                                },
                                "required": ["subdomain", "token", "type"]
                            }
                        ]
                    },
                    "title": "transports"
                },
                "level": {
                    "description": "Logging level.\n\nDefault:  `info`",
                    "enum": ["debug", "error", "info", "warn"],
                    "type": "string",
                    "title": "level"
                }
            },
            "title": "logging"
        },
        "torrents": {
            "description": "Torrent client settings",
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "path": {
                    "type": "string",
                    "title": "path"
                },
                "ttl": {
                    "description": "Delete torrent data if it is inactive for X seconds.\n\nDefault:  60 * 60",
                    "type": "number",
                    "title": "ttl"
                },
                "useDefaultTrackers": {
                    "description": "Load defaul trackers list & use it for each torrents.\n\nDefault:  true",
                    "type": "boolean",
                    "title": "useDefaultTrackers"
                },
                "announce": {
                    "description": "Additional trackers (`tr` parameter) which will be appened to each torrent.\n\nDefault:  []",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "title": "announce"
                },
                "urlList": {
                    "description": "Web Seed (`ws` parameter) which will be appened to each torrent.\n\nDefault:  []",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "title": "urlList"
                },
                "peerAddresses": {
                    "description": "Peer addresses (`x.pe` parameter).\n\nDefault:  []",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "title": "peerAddresses"
                }
            },
            "title": "torrents"
        },
        "security": {
            "description": "Security settings",
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "streamApi": {
                    "description": "Stream API (`/stream/:torrent`) settings",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "key": {
                            "description": "Protect stream API with [JSON Web Token](https://jwt.io/).\n\nIf `apiKey` is not set, it can also be used as API key (`authorization`: `bearer ${apiKey}`).\n\nDefault:  undefined",
                            "type": "string",
                            "title": "key"
                        },
                        "maxAge": {
                            "description": "The maximum allowed age for tokens to still be valid.\nIt is expressed in seconds or a string describing a time span [zeit/ms](https://github.com/vercel/ms)\n\nDefault:  `6h`",
                            "type": "string",
                            "title": "maxAge"
                        }
                    },
                    "title": "streamApi"
                },
                "frontendEnabled": {
                    "description": "Serve frontend static files\n\nDefault:  environment === 'production'",
                    "type": "boolean",
                    "title": "frontendEnabled"
                },
                "apiEnabled": {
                    "description": "Enable API\n\nDefault:  true",
                    "type": "boolean",
                    "title": "apiEnabled"
                },
                "apiKey": {
                    "description": "Protect API with key. It should be passed to headers to access the API (`authorization`: `bearer ${apiKey}`).\n\nIf `streamApi` doesn't have a separate key, `apiKey` can be used as JSON Web Token.\n\nDefault:  undefined",
                    "type": "string",
                    "title": "apiKey"
                }
            },
            "title": "security"
        },
        "trustProxy": {
            "description": "Get ip from `X-Forwarded-*` header.\n\nDefault:  true if inside App Engine or Heroku else false",
            "type": "boolean",
            "title": "trustProxy"
        }
    }
}
